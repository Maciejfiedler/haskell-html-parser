{
	"auto_complete":
	{
		"selected_items":
		[
		]
	},
	"buffers":
	[
		{
			"contents": "import qualified Network.HTTP.Simple as Net\nimport qualified Data.ByteString as BS\nimport Data.Either\nimport Control.Monad\n\nimport Text.Parsec\nimport Text.Parsec.Char\nimport Text.Parsec.Combinator\nimport Text.Parsec.ByteString\n\nurl = \"https://haskell.org\"\nrequest = Net.parseRequest_ url\nresponse = Net.httpBS request\n\n-- Expressions to parse\ndata HTMLExpr = Link String\n              | Other ()\n                deriving (Eq, Show)\n\nwhitespace :: Parser ()\nwhitespace = void $ many $ oneOf \" \\n\\t\"\n\nlexeme :: Parser a -> Parser a\nlexeme p = do\n           x <- p\n           whitespace\n           return x\n\nsimpleParser :: Parser a -> BS.ByteString -> Either ParseError a\nsimpleParser p = parse p \"\"\n\nparseHTMLLink :: Parser HTMLExpr\nparseHTMLLink = do\n    void $ lexeme $ string \"<a\" -- go to a element\n    void $ manyTill anyChar (try (string \"href=\"))\n    void $ char '\"' -- open href\n    link <- parseLink\n    void $ char '\"' -- close href\n    void $ manyTill anyChar (try (string \">\")) -- close element\n    return $ Link link\n  where parseLink = many1 $ satisfy (\\a -> a /= '\"')\n\nparseHTMLOther :: Parser HTMLExpr\nparseHTMLOther = do\n    void $ anyChar\n    return $ Other ()\n\nparseHTML :: Parser [HTMLExpr]\nparseHTML = many $ try parseHTMLLink <|> parseHTMLOther\n\ngetLinksFromParsedHTML:: Either ParseError [HTMLExpr] -> [HTMLExpr]\ngetLinksFromParsedHTML list = either (\\left -> []) getLinks list\n  where getLinks = \\a -> filter (\\b -> b /= Other ()) a\n\ngetLinksFromURL :: String -> [HTMLExpr]\ngetLinksFromURL url = do\n    let request = Net.parseRequest_ urluuuu\n    response <- \n    let responseBody = Net.getResponseBody response\n    let parsedHTML = simpleParser parseHTML responseBody\n    getLinksFromParsedHTML parsedHTML\n\n\nmain :: IO ()\nmain = do\n    print $ show $ getLinksFromURL \"https://google.com\"\n",
			"file": "Main.hs",
			"file_size": 1830,
			"file_write_time": 132624296173563708,
			"settings":
			{
				"buffer_size": 1812,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
	],
	"find":
	{
		"height": 0.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "Main.hs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1812,
						"regions":
						{
						},
						"selection":
						[
							[
								1565,
								1565
							]
						],
						"settings":
						{
							"syntax": "Packages/Haskell/Haskell.sublime-syntax",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 726.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 0.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "LICENSE.sublime-project",
	"replace":
	{
		"height": 0.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 150.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
